stages:
  - test
  - sonar
  - deploy

UnitTest:
  image: python:3.6
  stage: test
  before_script:
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google.list
    - pip install -r requirements.txt
    - python manage.py makemigrations
    - python manage.py migrate
    - python manage.py runserver 8000 &
  when: on_success
  script:
    - coverage run --include='hello/*' --omit='*/tests.py' manage.py test && coverage report -m && coverage xml
  artifacts:
    paths:
      - coverage.xml
      - pylint-report.txt

pylint:
  image: python:3.6
  stage: test
  before_script:
    - pip install pylint pylint-exit anybadge
  script:
    - mkdir ./pylint
    - pylint --output-format=text hello/views.py | tee ./pylint/pylint.txt || pylint-exit $?
    - PYLINT_SCORE=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' ./pylint/pylint.log)
    - echo "Pylint score is $PYLINT_SCORE"
  artifacts:
    paths:
      - ./pylint/pylint.txt

SonarScanner:
  image: addianto/sonar-scanner-cli:latest
  stage: sonar
  script:
    - sonar-scanner
      -Dsonar.host.url=https://pmpl.cs.ui.ac.id/sonarqube
      -Dsonar.login=$SONARQUBE_TOKEN
      -Dsonar.branch.name=$CI_COMMIT_REF_NAME
  only:
    - master
    - staging
    - development


DeploymentStaging:
  image: ruby:2.4
  stage: deploy
  before_script:
    - gem install dpl
    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
    - heroku config:set DISABLE_COLLECTSTATIC=1 --app $HEROKU_APPNAME --api-key=$HEROKU_APIKEY
  script:
    - dpl --provider=heroku --app=$HEROKU_APPNAME --api-key=$HEROKU_APIKEY
    - export HEROKU_API_KEY=$HEROKU_APIKEY
    - heroku run --app $HEROKU_APPNAME migrate
  environment:
    name: staging
    url: $HEROKU_APP_HOST
  only:
    - staging

DeploymentProduction:
  image: ruby:2.4
  stage: deploy
  before_script:
    - gem install dpl
    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
    - heroku config:set DISABLE_COLLECTSTATIC=1 --app $HEROKU_APPNAME --api-key=$HEROKU_APIKEY
  script:
    - dpl --provider=heroku --app=$HEROKU_APPNAME_PROD --api-key=$HEROKU_APIKEY
    - export HEROKU_API_KEY=$HEROKU_APIKEY
    - heroku run --app $HEROKU_APPNAME_PROD migrate
  environment:
    name: staging
    url: $HEROKU_APP_HOST_PROD
  only:
    - master
  when: manual